<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drcnet.highway.dao.StationFeatureStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.drcnet.highway.entity.StationFeatureStatistics">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ck_id" jdbcType="INTEGER" property="ckId" />
    <result column="rk_id" jdbcType="INTEGER" property="rkId" />
    <result column="ck" jdbcType="VARCHAR" property="ck" />
    <result column="rk" jdbcType="VARCHAR" property="rk" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="speed_cheating" jdbcType="INTEGER" property="speedCheating" />
    <result column="avg_speed" jdbcType="DECIMAL" property="avgSpeed" />
    <result column="cheating_rate" jdbcType="DECIMAL" property="cheatingRate" />
    <result column="k1_speed" jdbcType="DECIMAL" property="k1Speed" />
    <result column="k2_speed" jdbcType="DECIMAL" property="k2Speed" />
    <result column="k3_speed" jdbcType="DECIMAL" property="k3Speed" />
    <result column="k4_speed" jdbcType="DECIMAL" property="k4Speed" />
    <result column="k5_speed" jdbcType="DECIMAL" property="k5Speed" />
    <result column="h1_speed" jdbcType="DECIMAL" property="h1Speed" />
    <result column="h2_speed" jdbcType="DECIMAL" property="h2Speed" />
    <result column="h3_speed" jdbcType="DECIMAL" property="h3Speed" />
    <result column="h4_speed" jdbcType="DECIMAL" property="h4Speed" />
    <result column="h5_speed" jdbcType="DECIMAL" property="h5Speed" />
  </resultMap>
    <select id="listStationSpeedInfo" resultMap="BaseResultMap">
      select * from highway_tietou.station_feature_statistics
      <where>
          1=1
        <if test="ckId != null"> and ck_id = #{ckId}</if>
        <if test="rkId != null"> and rk_id = #{rkId}</if>
      </where>
      order by speed_cheating desc
    </select>

  <update id="truncateData">
    truncate table highway_tietou.station_feature_statistics;
  </update>

  <insert id="rebuildTableData">
    insert into station_feature_statistics (rk_id,ck_id,rk,ck,speed_cheating,total,cheating_rate,avg_speed
      ,k1_speed,k2_speed,k3_speed,k4_speed,k5_speed,
      h1_speed,h2_speed,h3_speed,h4_speed,h5_speed)
      select rk_id,ck_id,rk,ck,speed_cheating,total,speed_cheating/total cheating_rate,avg_speed
      ,k1_speed,k2_speed,k3_speed,k4_speed,k5_speed,
      h1_speed,h2_speed,h3_speed,h4_speed,h5_speed
      from
      (select rk_id,ck_id,rk,ck
      ,COUNT(case when tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 >180 or tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 &lt; 20 then 1 ELSE NULL end) speed_cheating
      ,COUNT(*) total
      ,AVG(tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6) avg_speed
      ,AVG(case vc when 1 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) k1_speed
      ,AVG(case vc when 2 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) k2_speed
      ,AVG(case vc when 3 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) k3_speed
      ,AVG(case vc when 4 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) k4_speed
      ,AVG(case vc when 5 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) k5_speed
      ,AVG(case vc when 11 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) h1_speed
      ,AVG(case vc when 12 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) h2_speed
      ,AVG(case vc when 13 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) h3_speed
      ,AVG(case vc when 14 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) h4_speed
      ,AVG(case vc when 15 then tolldistance/TIMESTAMPDIFF(second,entime,extime)*3.6 ELSE NULL end) h5_speed
      from tietou GROUP BY rk_id,ck_id) res ORDER BY speed_cheating desc;
  </insert>

  <select id="selectByCkIdAndRkId" resultMap="BaseResultMap">
    select * from highway_tietou.station_feature_statistics where ck_id = #{ckId} and rk_id = #{rkId} limit 1
  </select>
</mapper>
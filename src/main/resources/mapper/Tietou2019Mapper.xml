<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drcnet.highway.dao.Tietou2019Mapper">
  <resultMap id="BaseResultMap" type="com.drcnet.highway.entity.Tietou2019">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="month_time" jdbcType="INTEGER" property="monthTime" />
    <result column="entime" jdbcType="TIMESTAMP" property="entime" />
    <result column="rk" jdbcType="VARCHAR" property="rk" />
    <result column="rk_id" jdbcType="INTEGER" property="rkId" />
    <result column="envlp" jdbcType="VARCHAR" property="envlp" />
    <result column="envlp_id" jdbcType="INTEGER" property="envlpId" />
    <result column="envt" jdbcType="INTEGER" property="envt" />
    <result column="envc" jdbcType="INTEGER" property="envc" />
    <result column="extime" jdbcType="TIMESTAMP" property="extime" />
    <result column="ck" jdbcType="VARCHAR" property="ck" />
    <result column="ck_id" jdbcType="INTEGER" property="ckId" />
    <result column="vlp" jdbcType="VARCHAR" property="vlp" />
    <result column="vlp_id" jdbcType="INTEGER" property="vlpId" />
    <result column="vc" jdbcType="INTEGER" property="vc" />
    <result column="vt" jdbcType="INTEGER" property="vt" />
    <result column="exlane" jdbcType="VARCHAR" property="exlane" />
    <result column="oper" jdbcType="VARCHAR" property="oper" />
    <result column="lastmoney" jdbcType="DECIMAL" property="lastmoney" />
    <result column="freemoney" jdbcType="DECIMAL" property="freemoney" />
    <result column="totalweight" jdbcType="INTEGER" property="totalweight" />
    <result column="axlenum" jdbcType="INTEGER" property="axlenum" />
    <result column="tolldistance" jdbcType="INTEGER" property="tolldistance" />
    <result column="card" jdbcType="VARCHAR" property="card" />
    <result column="flagstationinfo" jdbcType="VARCHAR" property="flagstationinfo" />
    <result column="realflagstationinfo" jdbcType="VARCHAR" property="realflagstationinfo" />
    <result column="inv" jdbcType="VARCHAR" property="inv" />
  </resultMap>

  <select id="selectMaxId" resultType="java.lang.Integer">
    select max(id) from highway_tietou.tietou_2019
  </select>

  <select id="listAllByperoid" resultMap="BaseResultMap">
    select * from highway_tietou.tietou_2019 where id between #{begin} and #{end}
  </select>

  <select id="getTietou2019IdByTietouId" resultType="java.lang.Integer">
    select r.id from highway_tietou.tietou_2019 r ,(select entime,rk_id,ck_id,envlp_id,extime,vlp_id from tietou where id = #{recordId}) s
	    where r.entime = s.entime
	      and r.rk_id = s.rk_id
	      and r.envlp_id = s.envlp_id
	      and r.extime = s.extime
	      and r.ck_id = s.ck_id
	      and r.vlp_id = s.vlp_id
  </select>

  <select id="getIdListByCarId" resultType="java.lang.Integer">
    select id from highway_tietou.tietou_2019 where vlp_id = #{vlpId} order by extime desc limit 10000
  </select>

  <select id="getCountByVlpId" resultType="java.lang.Integer">
    select count(1) from highway_tietou.tietou_2019 where vlp_id = #{vlpId}
  </select>

  <select id="getDifferentCarType" resultType="com.drcnet.highway.domain.SameCarNum">
    select t.id,t.vlp_id vlpId,t.vc,c.car_type carType from highway_tietou.tietou_2019 t, highway_tietou.car_dic c
    where t.id BETWEEN #{startId} and #{endId} and t.vlp_id = c.id and t.vc &lt;&gt; c.car_type
  </select>

  <update id="updateVlpIdById">
    update highway_tietou.tietou_2019 set vlp_id = #{carId} where id = #{id}
  </update>

  <update id="updateVlpIdAndVlpByVlpId">
    update highway_tietou.tietou_2019 set vlp_id = #{newVlpId},vlp = #{carNo} where vlp_id = #{oldVlpId}
  </update>

  <select id="selectMaxCurrentTietouId" resultType="java.lang.Integer">
    SELECT MAX(id) from (
      select MAX(id) id from highway_tietou.tietou_2019 t where rk_id in
        <foreach collection="stationIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      UNION
      SELECT MAX(id) id from highway_tietou.tietou_2019 where ck_id in
        <foreach collection="stationIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      ) r
  </select>

  <select id="listByIdPeriod" resultMap="BaseResultMap">
    select * from highway_tietou.tietou_2019 where id between #{start} and #{end}
  </select>

  <update id="updateByPrimaryKeyAction">
        update tietou_2019 set vlp = #{vlp},envlp = #{envlp},vlp_id = #{vlpId},envlp_id = #{envlpId},ck_id = #{ckId},rk_id = #{rkId}
        where id = #{id}
    </update>

  <select id="listAllByIdList" resultMap="BaseResultMap">
    select * from highway_tietou.tietou_2019 where id in
    <foreach collection="idList" open="(" close=")" separator="," item="item">
      #{item}
    </foreach>
  </select>

  <select id="listByTime" resultMap="BaseResultMap">
    select * from (
      select * from highway_tietou.tietou_2019 where vlp_id = #{carId}
      <if test="startTime !=null and endTime != null">
        and entime between #{startTime} and #{endTime}
      </if>
      <if test="startTime !=null and endTime == null">
        and entime >= #{startTime}
      </if>
      <if test="startTime ==null and endTime != null">
        and entime &lt;= #{endTime}
      </if>
    union
      select * from highway_tietou.tietou_2019 where vlp_id = #{carId}
      <if test="startTime !=null and endTime != null">
        and extime between #{startTime} and #{endTime}
      </if>
      <if test="startTime !=null and endTime == null">
        and extime >= #{startTime}
      </if>
      <if test="startTime ==null and endTime != null">
        and extime &lt;= #{endTime}
      </if>
    ) r
  </select>

  <select id="statisticRiskTypeCountByMonth" resultType="com.drcnet.highway.domain.StatisticRiskTypeCount">
    select COUNT( case when same_car_number = 0 then 1 ELSE NULL end) same_car_number
		,COUNT( case when low_speed =1 then 1 ELSE NULL end) low_speed
		,COUNT( case when high_speed =1 then 1 ELSE NULL end) high_speed
        ,COUNT( case when same_car_type = 0 then 1 ELSE NULL end) same_car_type
        ,COUNT( case when same_car_situation = 0 then 1 ELSE NULL end) same_car_situation
        ,COUNT( case when short_dis_overweight = 1 then 1 ELSE NULL end) short_dis_overweight
        ,COUNT( case when long_dis_lightweight = 1 then 1 ELSE NULL end) long_dis_lightweight
        ,COUNT( case when diff_flagstation_info = 1 then 1 ELSE NULL end) diff_flagstation_info
		,COUNT( case when flagstation_lost = 1 then 1 ELSE NULL end) flagstation_lost
        ,COUNT( case when same_station = 1 then 1 ELSE NULL end) same_station
		,COUNT( case when same_time_range_again = 1 then 1 ELSE NULL end) same_time_range_again
		,COUNT( case when min_out_in = 1 then 1 ELSE NULL end) min_out_in
		,COUNT( case when different_zhou = 1 then 1 ELSE NULL end) different_zhou
        from highway_tietou.tietou_feature_extraction tf where month_time = #{maxMonth}
  </select>

  <select id="statisticRiskTypeCountByMonthAndRiskType" resultType="com.drcnet.highway.domain.StatisticRiskTypeCount">
    select
        <choose>
          <when test="firstRiskName == 'same_car_type' or firstRiskName == 'same_car_situation' or firstRiskName == 'same_car_number'">
            COUNT( case when ${firstRiskName} = 0 then 1 ELSE NULL end) ${firstRiskName}
           </when>
          <otherwise> COUNT( case when ${firstRiskName} = 1 then 1 ELSE NULL end) ${firstRiskName} </otherwise>
        </choose>
        <choose>
          <when test="secondRiskName == 'same_car_type' or secondRiskName == 'same_car_situation' or secondRiskName == 'same_car_number'">
            ,COUNT( case when ${secondRiskName} = 0 then 1 ELSE NULL end) ${secondRiskName}
          </when>
          <otherwise> ,COUNT( case when ${secondRiskName} = 1 then 1 ELSE NULL end) ${secondRiskName} </otherwise>
        </choose>
        <choose>
          <when test="thirdRiskName == 'same_car_type' or thirdRiskName == 'same_car_situation' or thirdRiskName == 'same_car_number'">
            ,COUNT( case when ${thirdRiskName} = 0 then 1 ELSE NULL end) ${thirdRiskName}
          </when>
          <otherwise> ,COUNT( case when ${thirdRiskName} = 1 then 1 ELSE NULL end) ${thirdRiskName} </otherwise>
        </choose>

        from highway_tietou.tietou_feature_extraction tf where month_time = #{monthTime}
  </select>

  <select id="listTietouAndExtractionByperoid" resultType="com.drcnet.highway.domain.es.EsTietouExtraction">
    select  t.id,t.month_time monthTime,t.entime,t.rk,t.rk_id rkId,
            t.envlp, t.envlp_id envlpId,
            t.envt,t.envc,t.extime,t.ck,t.ck_id ckId,t.vlp,t.vlp_id vlpId,
            t.vc,t.vt,t.exlane,t.oper,t.lastmoney,t.freemoney,t.totalweight,
            t.axlenum,t.tolldistance,t.card,t.flagstationinfo,t.realflagstationinfo,
            t.inv,e.same_station sameStation,
            e.low_speed lowSpeed,e.high_speed highSpeed,
            e.same_car_number sameCarNumber,
            e.same_car_type sameCarType,
            e.same_car_situation sameCarSituation,
            e.short_dis_overweight shortDisOverweight,
            e.long_dis_lightweight longDisLightweight,
            e.different_zhou differentZhou,
            e.same_time_range_again sameTimeRangeAgain,
            e.flagstation_lost flagstationLost,
            e.diff_flagstation_info diffFlagstationInfo,
            e.same_route_mark sameRouteMark,
            e.min_out_in minOutIn,
            e.car_type carType
	from highway_tietou.tietou_2019 t  inner join highway_tietou.tietou_feature_extraction e
	  on t.id = e.id where t.id between #{begin} and #{end}
  </select>
</mapper>